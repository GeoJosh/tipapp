name: Web Application Deployment
on:
  push:
    branches:
      - chore/automated-service-deployment

jobs:
  build:
    name: Build Production Distributables
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout Web Application Repository
        uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: web-node-modules
        with:
          path: web/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Run Production Configuration Build
        run: |
          cd web
          npm ci
          npm run build:production

      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: tipapp-web
          path: web/dist/tipapp
  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v1
        with:
          name: tipapp-web
      - run: ls -R .
      - name: Copy Files to Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets. DIGITALOCEAN_HOST_WEB }}
          username: ${{ secrets. DIGITALOCEAN_USERNAME }}
          key: ${{ secrets. DIGITALOCEAN_KEY }}                        
          source: "tipapp-web"
          target: ${{ secrets. DEPLOY_PATH }}
          strip_components: 1
          rm: true